<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dev.mvc.substances.SubstancesDAOInter">
  <insert id="create" parameterType="dev.mvc.substances.SubstancesVO">
    INSERT INTO substances(substancesno, visitorno, kindno, title, substance, cnt, replycnt, passwd, 
                     word, address, name, file1, file1saved, thumb1, size1, rdate, price)
    VALUES(substances_seq.nextval, #{visitorno}, #{kindno}, #{title}, #{substance},  #{cnt}, #{replycnt}, #{passwd},
       #{word}, #{address}, #{name}, #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate, #{price})
  </insert> 

  <select id="list_all" parameterType="dev.mvc.substances.SubstancesVO">
    SELECT substancesno, visitorno, kindno, title, substance, recom, cnt, replycnt, passwd, word, address, name, rdate, file1, file1saved, thumb1, size1, price
		FROM substances
		ORDER BY substancesno DESC
  </select>
  
  <select id="list_by_kindno" resultType="dev.mvc.substances.SubstancesVO" parameterType="int">
     SELECT substancesno, visitorno, kindno, title, substance, recom, cnt, replycnt, passwd, word, address, name, rdate, file1, file1saved, thumb1, size1, price
			FROM substances
			WHERE kindno=#{kindno}
			ORDER BY substancesno ASC
  </select>
  
  <select id="read" resultType="dev.mvc.substances.SubstancesVO" parameterType="int">
     SELECT substancesno, visitorno, kindno, title, substance, recom, cnt, replycnt, passwd, word, address, name, rdate, file1, file1saved, thumb1, size1, map, youtube, price
      FROM substances
      WHERE substancesno=#{substancesno}
  </select>
  
  <update id="map" parameterType="HashMap">
    UPDATE substances SET map=#{map} WHERE substancesno=#{substancesno}
  </update>
  
  <update id="youtube" parameterType="HashMap">
    UPDATE substances SET youtube=#{youtube} WHERE substancesno=#{substancesno}
  </update>
  
  <!-- 카테고리별 검색 목록 -->
  <select id="list_by_kindno_search" resultType="dev.mvc.substances.SubstancesVO" parameterType="HashMap">
    SELECT substancesno, visitorno, kindno, title, substance, recom, cnt, replycnt, passwd, word, address, name, rdate, file1, file1saved, thumb1, size1, map, youtube
      FROM substances
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE kindno=#{kindno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE kindno=#{kindno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(substance) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
    ORDER BY substancesno DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM substances
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE kindno=#{kindno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE kindno=#{kindno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(substance) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%'
                                                  OR UPPER(address) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
  </select>   
  
    <!-- 종류별 검색 + 페이징 목록 -->
  <select id="list_by_kindno_search_paging" resultType="dev.mvc.substances.SubstancesVO" parameterType="dev.mvc.substances.SubstancesVO">
   SELECT substancesno, visitorno, kindno, title, substance, recom, cnt, replycnt, passwd, word, address, name, rdate, file1, file1saved, thumb1, size1, map, youtube, r
   FROM (
              SELECT substancesno, visitorno, kindno, title, substance, recom, cnt, replycnt, passwd, word, address, name, rdate, file1, file1saved, thumb1, size1, map, youtube, rownum as r
              FROM (
                        SELECT substancesno, visitorno, kindno, title, substance, recom, cnt, replycnt, passwd, word, address, name, rdate, file1, file1saved, thumb1, size1, map, youtube
                        FROM substances
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                            WHERE kindno=#{kindno}
                          </when>
                          <otherwise>
                            WHERE kindno=#{kindno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(substance) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%'
                                                              OR UPPER(address) LIKE '%' || UPPER(#{word}) || '%')
                          </otherwise>
                        </choose>
                        ORDER BY substancesno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!-- 1 page: WHERE r >= 1 AND r <= 10; 
          2 page: WHERE r >= 11 AND r <= 20;
          3 page: WHERE r >= 21 AND r <= 30; -->
  </select>   
  
  <!-- 비번 체킹 -->
  <select id="password_check" resultType="int" parameterType="HashMap">
  SELECT COUNT(*) as cnt 
	FROM substances
	WHERE substancesno=#{substancesno} AND passwd=#{passwd}
  </select>
  
  <!-- 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.substances.SubstancesVO">
  UPDATE substances
	SET title=#{title}, substance=#{substance},  word=#{word}, address=#{address}, price=#{price}
	WHERE substancesno = #{substancesno}
  </update>
  
  <!-- 파일 수정/삭제 -->
  
  <update id="update_file" parameterType="dev.mvc.substances.SubstancesVO">
	UPDATE substances
	SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
	WHERE substancesno =#{substancesno}
  </update>
  
  <!-- 글 삭제 -->
  <delete id="delete" parameterType="int">
  DELETE FROM substances
  WHERE substancesno = #{substancesno}
  </delete>
  
  <!-- 종류에 속한 글 개수 리턴 -->
  <select id="count_by_kindno" resultType="int" parameterType="int">
  SELECT COUNT(*) as cnt 
	FROM substances 
	WHERE kindno=#{kindno}
  </select>
  
  <!-- 종류에 속한 글 모두 삭제-->
  <delete id="delete_by_kindno" parameterType="int">
  DELETE FROM substances WHERE kindno=#{kindno}
  </delete>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
</mapper>